{"ast":null,"code":"var _jsxFileName = \"/Users/sithumraveesha/Documents/GitHub/Roulettech-Assesment/frontend/src/components/TextEditor.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport '../assets/css/TextEditor.css';\nimport { CustomToolbar } from \"./CustomToolbar\";\nimport getCookie from \"./GetCSRF\";\nimport NotesApi from \"../api/NotesApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst csrftoken = getCookie('csrftoken');\nexport const TextEditor = props => {\n  _s();\n  const [noteHTML, setNoteHTML] = useState(props.content.content);\n  const handleOnChange = html => {\n    setNoteHTML(html);\n  };\n  const updateDB = async () => {\n    console.log('Updated in db with data: ', noteHTML);\n    try {\n      const response = await NotesApi.put(props.url, {\n        title: props.content.title,\n        description: props.content.description,\n        content: noteHTML,\n        folder: props.content.folder\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrftoken\n        }\n      });\n      console.log(response.data);\n    } catch (error) {\n      if (error.response) {\n        console.log(\"Response Error: \", error.response.data);\n      } else {\n        console.log(\"Request Error: \", error.request.data);\n      }\n    }\n  };\n  const modules = {\n    toolbar: {\n      container: '#toolbar'\n    }\n  };\n  const formats = ['header', 'font', 'size', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image', 'color', 'background', 'align', 'save'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-editor\",\n    children: [/*#__PURE__*/_jsxDEV(CustomToolbar, {\n      updateDB: updateDB\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n      modules: modules,\n      formats: formats,\n      theme: 'snow',\n      value: noteHTML,\n      onChange: handleOnChange,\n      placeholder: \"Add notes here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(TextEditor, \"OsnN5+jv1+lOetV2SgPX6V3diaI=\");\n_c = TextEditor;\nvar _c;\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"names":["useState","ReactQuill","CustomToolbar","getCookie","NotesApi","jsxDEV","_jsxDEV","csrftoken","TextEditor","props","_s","noteHTML","setNoteHTML","content","handleOnChange","html","updateDB","console","log","response","put","url","title","description","folder","headers","data","error","request","modules","toolbar","container","formats","className","children","fileName","_jsxFileName","lineNumber","columnNumber","theme","value","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/sithumraveesha/Documents/GitHub/Roulettech-Assesment/frontend/src/components/TextEditor.js"],"sourcesContent":["import { useState } from \"react\";\nimport ReactQuill from 'react-quill'\nimport 'react-quill/dist/quill.snow.css'\nimport '../assets/css/TextEditor.css'\nimport { CustomToolbar } from \"./CustomToolbar\";\nimport getCookie from \"./GetCSRF\";\nimport NotesApi from \"../api/NotesApi\";\n\nconst csrftoken = getCookie('csrftoken')\n\nexport const TextEditor = (props) => {\n    const [noteHTML, setNoteHTML] = useState(props.content.content)\n    \n    const handleOnChange = (html) => {\n        setNoteHTML(html)\n    }\n\n    const updateDB = async () => {\n        console.log('Updated in db with data: ', noteHTML)\n        try{\n            const response = await NotesApi.put(props.url,\n                {\n                    title: props.content.title,\n                    description: props.content.description,\n                    content: noteHTML,\n                    folder: props.content.folder\n                },\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'X-CSRFToken': csrftoken\n                    }\n                }\n            )\n            console.log(response.data)\n        } catch (error){\n            if (error.response){\n                console.log(\"Response Error: \", error.response.data)\n            }\n            else{\n                console.log(\"Request Error: \",error.request.data)\n            }\n        }\n    }\n\n    const modules = {\n        toolbar: {\n            container: '#toolbar',\n        }\n    }\n\n    const formats = [\n        'header',\n        'font',\n        'size',\n        'bold',\n        'italic',\n        'underline',\n        'strike',\n        'blockquote',\n        'list',\n        'bullet',\n        'indent',\n        'link',\n        'image',\n        'color',\n        'background',\n        'align',\n        'save'\n    ]\n\n\n    return (\n    <div className='text-editor'>\n        <CustomToolbar updateDB={updateDB}/>\n        <ReactQuill\n          modules={modules}\n          formats={formats}\n          theme={'snow'}\n          value={noteHTML}\n          onChange={handleOnChange}\n          placeholder=\"Add notes here...\"\n        />\n    </div>\n    )\n}\n\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAO,iCAAiC;AACxC,OAAO,8BAA8B;AACrC,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAOC,SAAS,MAAM,WAAW;AACjC,OAAOC,QAAQ,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAGJ,SAAS,CAAC,WAAW,CAAC;AAExC,OAAO,MAAMK,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAACS,KAAK,CAACI,OAAO,CAACA,OAAO,CAAC;EAE/D,MAAMC,cAAc,GAAIC,IAAI,IAAK;IAC7BH,WAAW,CAACG,IAAI,CAAC;EACrB,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzBC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEP,QAAQ,CAAC;IAClD,IAAG;MACC,MAAMQ,QAAQ,GAAG,MAAMf,QAAQ,CAACgB,GAAG,CAACX,KAAK,CAACY,GAAG,EACzC;QACIC,KAAK,EAAEb,KAAK,CAACI,OAAO,CAACS,KAAK;QAC1BC,WAAW,EAAEd,KAAK,CAACI,OAAO,CAACU,WAAW;QACtCV,OAAO,EAAEF,QAAQ;QACjBa,MAAM,EAAEf,KAAK,CAACI,OAAO,CAACW;MAC1B,CAAC,EACD;QACIC,OAAO,EAAE;UACL,cAAc,EAAE,kBAAkB;UAClC,aAAa,EAAElB;QACnB;MACJ,CACJ,CAAC;MACDU,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACO,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAC;MACX,IAAIA,KAAK,CAACR,QAAQ,EAAC;QACfF,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAES,KAAK,CAACR,QAAQ,CAACO,IAAI,CAAC;MACxD,CAAC,MACG;QACAT,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAACS,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC;MACrD;IACJ;EACJ,CAAC;EAED,MAAMG,OAAO,GAAG;IACZC,OAAO,EAAE;MACLC,SAAS,EAAE;IACf;EACJ,CAAC;EAED,MAAMC,OAAO,GAAG,CACZ,QAAQ,EACR,MAAM,EACN,MAAM,EACN,MAAM,EACN,QAAQ,EACR,WAAW,EACX,QAAQ,EACR,YAAY,EACZ,MAAM,EACN,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,OAAO,EACP,OAAO,EACP,YAAY,EACZ,OAAO,EACP,MAAM,CACT;EAGD,oBACA1B,OAAA;IAAK2B,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxB5B,OAAA,CAACJ,aAAa;MAACc,QAAQ,EAAEA;IAAS;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACpChC,OAAA,CAACL,UAAU;MACT4B,OAAO,EAAEA,OAAQ;MACjBG,OAAO,EAAEA,OAAQ;MACjBO,KAAK,EAAE,MAAO;MACdC,KAAK,EAAE7B,QAAS;MAChB8B,QAAQ,EAAE3B,cAAe;MACzB4B,WAAW,EAAC;IAAmB;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAAA5B,EAAA,CA3EYF,UAAU;AAAAmC,EAAA,GAAVnC,UAAU;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}